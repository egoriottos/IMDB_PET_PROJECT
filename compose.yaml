version: '3.8'
services:
  auth-service:
    image: 'postgres:latest'
    container_name: user-service
    environment:
      - 'POSTGRES_DB=userdb'
      - 'POSTGRES_PASSWORD=user'
      - 'POSTGRES_USER=user'
    ports:
      - "5431:5432"
    volumes:
      - ./data/postgres-auth-data:/var/lib/postgres-auth-data/data

  film-service:
    image: 'postgres:latest'
    container_name: film-service
    environment:
      - 'POSTGRES_DB=filmdb'
      - 'POSTGRES_PASSWORD=user'
      - 'POSTGRES_USER=user'
    ports:
      - "5433:5432"
    volumes:
      - ./data/postgres:/var/lib/postgres/data

  avatar-service:
    image: 'postgres:latest'
    container_name: avatar-service
    environment:
      - 'POSTGRES_DB=avatardb'
      - 'POSTGRES_PASSWORD=user'
      - 'POSTGRES_USER=user'
    ports:
      - '5434:5432'
    volumes:
      - ./data/postgres-avatar-data:/var/lib/postgres-avatar-data/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.22
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
    ports:
      - "9200:9200"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./data/zookeeper:/var/lib/zookeeper

  kafka-1:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_MIN_INSYNC_REPLICAS: 1
    volumes:
      - ./data/kafka-1:/var/lib/kafka/data

  kafka-2:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-2
    ports:
      - "9093:9093"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:29093,PLAINTEXT_HOST://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_MIN_INSYNC_REPLICAS: 1
    volumes:
      - ./data/kafka-2:/var/lib/kafka/data

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=pass
    command: >
      redis-server --requirepass pass
    volumes:
      - ./data/redis:/data

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - ./data/grafana:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus